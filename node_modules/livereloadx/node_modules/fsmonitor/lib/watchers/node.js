// Generated by IcedCoffeeScript 1.3.3f
(function() {
  var EventEmitter, NodeWatcher, Path, debug, fs,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  debug = require('debug')('fsmonitor');

  fs = require('fs');

  Path = require('path');

  EventEmitter = require('events').EventEmitter;

  module.exports = NodeWatcher = (function(_super) {

    __extends(NodeWatcher, _super);

    function NodeWatcher(root) {
      this.root = root;
      this._watchers = {};
    }

    NodeWatcher.prototype.close = function() {
      var relpath, watcher, _ref;
      _ref = this.watchers;
      for (relpath in _ref) {
        if (!__hasProp.call(_ref, relpath)) continue;
        watcher = _ref[relpath];
        watcher.close();
      }
      return this._watchers = null;
    };

    NodeWatcher.prototype.addFolder = function(relpath) {
      var _base,
        _this = this;
      return (_base = this._watchers)[relpath] || (_base[relpath] = (function() {
        var watcher;
        watcher = fs.watch(Path.join(_this.root, relpath));
        watcher.on('change', function(event, filename) {
          debug("fs.watch incoming change: event = %j, filename = %j", event, filename);
          return _this.emit('change', relpath, filename, false);
        });
        return watcher;
      })());
    };

    NodeWatcher.prototype.removeFolder = function(relpath) {
      if (this._watchers.hasOwnProperty(relpath)) {
        this._watchers[relpath].close();
        return delete this._watchers[relpath];
      }
    };

    return NodeWatcher;

  })(EventEmitter);

}).call(this);
